@model IEnumerable<TaskAllocationVM>

@{
    ViewData["Title"] = "ViewSingedInEmployeeAllocations";
}

<style>
    .calendar-legend {
        margin-top: 20px;
    }

    .calendar-legend ul {
        padding: 0;
        display: flex;
        gap: 20px;
        list-style-type: none;
    }

    .calendar-legend li {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .legend-color-box {
        width: 20px;
        height: 20px;
        display: inline-block;
        border-radius: 3px;
        margin-right: 5px;
        border: 1px solid #ccc;
    }

</style>


@if (ViewBag.taskManagerNotified == false)
{
    <div class="alert alert-warning">
        <strong>Notice:</strong> Something went wrong with the email service and the Task Manager didnt get his automatic notification. Please contact technical support.
    </div>
    <br />
}

<h1>My Task Allocations</h1>

@if (Model.Any())
{
    <!-- FullCalendar -->
    <div id="calendar"></div>

    <div class="calendar-legend mt-4">
        <h5>Legend:</h5>
        <ul class="list-unstyled d-flex gap-3 align-items-center">
            <li class="d-flex align-items-center">
                <span class="legend-color-box" style="background-color: #07e7eb;"></span>
                <span>Completed</span>
            </li>
            <li class="d-flex align-items-center">
                <span class="legend-color-box" style="background-color: #dc3545;"></span>
                <span>Not Completed</span>
            </li>
        </ul>
    </div>
}
else
{
    <h1>Currently, you don't have any Task allocations!</h1>
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');

            // Convert the Model data to JSON for FullCalendar events
        var events = @Html.Raw(Json.Serialize(
            Model.Select(item => new
            {
                id = item.TaskType.Id,
                title = $"{item.TaskType.Name}",
                start = $"{item.TaskType.StartDate:yyyy-MM-dd}T{item.TaskType.StartTime:HH\\:mm}",
                end = $"{item.TaskType.StartDate:yyyy-MM-dd}T{item.TaskType.EndTime:HH\\:mm}",
                color = item.TaskType.Completed ? "#07e7eb" : "#dc3545", // Tirquose for completed, red for not completed
                extendedProps = new
                {
                    department = item.TaskType.Department,
                    skillLevel = item.TaskType.SkillLevel,
                    description = item.TaskType.Description
                }
            })
        ));

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                timeZone: 'local', // Use the browser's local time zone
                events: events, // Bind events
                eventDisplay: 'block', // Stretches the event
                forceEventDuration: true, // Ensures all events have duration
                slotMinTime: "00:00:00", // Earliest time
                slotMaxTime: "24:00:00", // Latest time
                eventTimeFormat: { // Format event times
                    hour: '2-digit',
                    minute: '2-digit',
                    hour12: false
                },
                allDaySlot: false,

                eventClick: function (info) {
                    // Redirect to the Edit action with the event ID
                    var editUrl = '@Url.Action("Details", "TaskTypes")' + '?id=' + info.event.id;
                    window.location.href = editUrl;
                },
                eventMouseEnter: function (info) {
                    info.el.style.cursor = 'pointer'; // Change the cursor to a pointer
                },
                eventMouseLeave: function (info) {
                    info.el.style.cursor = ''; // Revert to the default cursor
                }
            });

            calendar.render();
        });
    </script>
}
