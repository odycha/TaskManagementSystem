@model IEnumerable<TaskTypeReadOnlyVM>
@{
    ViewData["Title"] = "CalendarIndex";
}
<style>
    .calendar-legend {
        margin-top: 20px;
    }

    .calendar-legend ul {
        padding: 0;
        display: flex;
        gap: 20px;
        list-style-type: none;
    }

    .calendar-legend li {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .legend-color-box {
        width: 20px;
        height: 20px;
        display: inline-block;
        border-radius: 3px;
        margin-right: 5px;
        border: 1px solid #ccc;
    }
</style>

<div class="d-flex flex-wrap align-items-center gap-3">
    <h1>Tasks Calendar</h1>
</div>

<!-- Filters Section -->
<form asp-action="CalendarIndex" method="get">
    <div class="d-flex flex-wrap align-items-center gap-3">

        <!-- Department Dropdown -->
        <div class="form-group">
            <label for="department" class="control-label">Department</label>
            <select class="form-control" id="department" name="department">
                <option value="" selected="@(ViewBag.department == null)">All Departments</option>
                <option value="Development" selected="@(ViewBag.department == "Development")">Development</option>
                <option value="IT Support" selected="@(ViewBag.department == "IT Support")">IT Support</option>
                <option value="Marketing" selected="@(ViewBag.department == "Marketing")">Marketing</option>
            </select>
        </div>

        <!-- Minimum Skill Level Dropdown -->
        <div class="form-group">
            <label for="minimumSkillLevel" class="control-label">Minimum Skill Level</label>
            <select class="form-control" id="minimumSkillLevel" name="minimumSkillLevel">
                <option value="" selected="@(ViewBag.minimumSkillLevel == null)">Any Skill Level</option>
                @for (int i = 1; i <= 10; i++)
                {
                    <option value="@i" selected="@(ViewBag.minimumSkillLevel == i)">@i</option>
                }
            </select>
        </div>

        <!-- Allocation Dropdown -->
        <div class="form-group">
            <label for="isAllocatted" class="control-label">Allocation</label>
            <select class="form-control" id="isAllocatted" name="isAllocatted">
                <option value="" selected="@(ViewBag.isAllocatted == null)">All</option>
                <option value="true" selected="@(ViewBag.isAllocatted == true)">Allocated</option>
                <option value="false" selected="@(ViewBag.isAllocatted == false)">Not Allocated</option>
            </select>
        </div>

        <!-- Completion Dropdown -->
        <div class="form-group">
            <label for="isCompleted" class="control-label">Completion</label>
            <select class="form-control" id="isCompleted" name="isCompleted">
                <option value="" selected="@(ViewBag.isCompleted == null)">All</option>
                <option value="true" selected="@(ViewBag.isCompleted == true)">Completed</option>
                <option value="false" selected="@(ViewBag.isCompleted == false)">Not Completed</option>
            </select>
        </div>

        <!-- Submit Button -->
        <div class="form-group">
            <label class="form-label d-block" style="visibility: hidden;">Filter</label>
            <button type="submit" class="btn btn-success">Filter</button>
        </div>
    </div>
</form>

<br />

<!-- FullCalendar -->
<div id="calendar"></div>

<div class="calendar-legend mt-4">
    <h5>Legend:</h5>
    <ul class="list-unstyled d-flex gap-3 align-items-center">
        <li class="d-flex align-items-center">
            <span class="legend-color-box" style="background-color: #07e7eb;"></span>
            <span>Completed</span>
        </li>
        <li class="d-flex align-items-center">
            <span class="legend-color-box" style="background-color: #28a745;"></span>
            <span>Allocated</span>
        </li>
        <li class="d-flex align-items-center">
            <span class="legend-color-box" style="background-color: #dc3545;"></span>
            <span>Not Allocated</span>
        </li>
    </ul>
</div>



@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.addEventListener('DOMContentLoaded', function () {
             var calendarEl = document.getElementById('calendar');

             // Convert the Model data to JSON for FullCalendar events
            var events = @Html.Raw(Json.Serialize(
                Model.Select(item => new
                    {
                    id = item.Id,
                    title = $"{item.Name}",
                    start = $"{item.StartDate:yyyy-MM-dd}T{item.StartTime:HH\\:mm}",
                    end = $"{item.StartDate:yyyy-MM-dd}T{item.EndTime:HH\\:mm}",
                    color = item.Allocated == false
                            ? "#dc3545"
                            : item.Completed == true
                            ? "#07e7eb"
                            : "#28a745",
                    extendedProps = new
                    {
                        department = item.Department,
                        skillLevel = item.SkillLevel
                    }
                })
            ));

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth', // Week view
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                events: events, // Bind events
                eventDisplay: 'block', // Stretches the event
                forceEventDuration: true, // Ensures all events have duration
                slotMinTime: "00:00:00", // Earliest time
                slotMaxTime: "24:00:00", // Latest time
                eventTimeFormat: { // Format event times
                    hour: '2-digit',
                    minute: '2-digit',
                    hourCycle: 'h23'
                },
                allDaySlot: false,

                eventClick: function (info) {
                    // Redirect to the Edit action with the event ID
                    var editUrl = '@Url.Action("Details", "TaskTypes")' + '?id=' + info.event.id;
                    window.location.href = editUrl;
                },
                eventMouseEnter: function (info) {
                    info.el.style.cursor = 'pointer'; // Change the cursor to a pointer
                },
                eventMouseLeave: function (info) {
                    info.el.style.cursor = ''; // Revert to the default cursor
                }
            });

                 calendar.render();
             });
    </script>
}
