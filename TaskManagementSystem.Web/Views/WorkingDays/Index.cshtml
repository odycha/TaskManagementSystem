@model IEnumerable<WorkingDayReadOnlyVM>

@{
    ViewData["Title"] = "Working Dates Summary";
}

<h1>Working Dates Summary</h1>

<div class="button-container">
    @if (User.IsInRole(Roles.Administrator))
    {
        <p>
            <a asp-action="Create" class="btn btn-primary">Create New Working Day</a>
        </p>
    }
</div>

@if (Model == null || !Model.Any())
{
    <p>No data available.</p>
}
else
{
    <div id="calendar"></div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Reference to the calendar element
            var calendarEl = document.getElementById('calendar');

            // Convert the Model data to JSON for FullCalendar
            var events = @Html.Raw(Json.Serialize(
        Model.Select(item => new
        {
            title = item.Comments,     // Display comments as the event title
            start = item.DayFormatted  // Date for the event (ensure DayFormatted is ISO 8601 formatted)
        })
        ));

            console.log(events);  // Debug: Check the serialized events

            // Initialize the calendar
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth', // Default view
                events: events,             // Bind the events
                headerToolbar: {            // Calendar header configuration
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                }
                

            });

            // Render the calendar
            calendar.render();
        });
    </script>
}
